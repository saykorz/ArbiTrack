// <auto-generated />
using ArbiTrack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArbiTrack.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250510093517_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("ArbiTrack.Data.Models.ImpossibleFutureAppModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ImpossibleFutureApps");
                });

            modelBuilder.Entity("ArbiTrack.Data.Models.LogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BlockHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BlockNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GasPrice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GasUsed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ImpossibleFutureAppModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogIndex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeStamp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Topics")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionIndex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ImpossibleFutureAppModelId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("ArbiTrack.Data.Models.LogModel", b =>
                {
                    b.HasOne("ArbiTrack.Data.Models.ImpossibleFutureAppModel", null)
                        .WithMany("Logs")
                        .HasForeignKey("ImpossibleFutureAppModelId");
                });

            modelBuilder.Entity("ArbiTrack.Data.Models.ImpossibleFutureAppModel", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
